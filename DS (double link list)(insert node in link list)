#include<stdio.h>
#include<stdlib.h>
#define null 0
struct node
{
     struct node *pre;
     int data;
     struct node *next;
}*head,*domypre;
int n,i;
void create()
{
    int m;
    struct node *t,*last;
    head=(struct node *)malloc(sizeof(struct node));
    printf("enter the head value:::");
    scanf("%d",&head->data);
    head->next=head->pre=null;
    last=head;
    printf("enter the number you create a node::");
    scanf("%d",&m);
     for(i=1;i<=m;i++)
     {
        t=(struct node *)malloc(sizeof(struct node));
        printf("enter the %d node data:::",i);
        scanf("%d",&t->data);
        last->next=t;
        t->pre=last;
        last=t;
     }
     t->next=null;
}
void displaynext()
{
    struct node *x=head;
    while(x!=null)
    {
        printf("%d\t",x->data);
        x=x->next;
    }
}
void displaypre()
{
    struct node *t,*x=head;
    while(x->next!=null)
    {
        x=x->next;
    }
    t=x;
       while(t!=null)
    {
        printf("%d\t",t->data);
        t=t->pre;
    }

}
void insert()
{
    struct node *t=head,*temp,*p;
    printf("enter the no.you want insert the node::");
    temp=(struct node *)malloc(sizeof(struct node));
    scanf("%d",&n);
    if(n==0)
    {
        printf("enter the value::");
        scanf("%d",&temp->data);
        temp->pre=null;
        temp->next=head;
        head->pre=temp;
        head=temp;
    }
    else
    {
        for(i=1;i<n;i++)
        {
            t=t->next;
        }
        p=t->next;
        printf("enter the value::");
        scanf("%d",&temp->data);
        temp->next=p;
        temp->pre=t;
        t->next=temp;
        p->pre=temp;
    }
}
int main()
{
    int num;
      while(1)
    {
    printf("\nenter 1 for create double linklist\n");
    printf("enter 2 for display next of double\n");
    printf("enter 3 for dispaly pre\n");
    printf("enter 4 for insert node at position\n");
    scanf("%d",&num);
    switch (num)
    {
            case 1:
            {
                create();
                break;
            }
            case 2:
            {
                displaynext();
                break;
            }
            case 3:
            {
                displaypre();
                break;
            }
            case 4:
            {
                insert();
                break;
            }
    }
    }
}
