#include<iostream>
using namespace std;
class base
{
    public:
    base()
    {
        cout<<"base class destructor"<<endl;
    }
  virtual ~base()
    {
        cout<<"base class destructor"<<endl;
    }
};
class derived:public base
{
    public:
    derived()
    {
        cout<<"derived class constructor"<<endl;
    }
    ~derived()
    {
        cout<<"derived class destructor"<<endl;
    }
};
    // void fun()
    //     {
    //     base *p=new derived();
    //     delete p;
    //     }
int main()
{
    derived d;
}
