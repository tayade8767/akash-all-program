#include<iostream>
using namespace std;
class akash
{
   public:                                        //it interface and it is virtual pure function and abstract class
   virtual void fun1()=0;                        //we can not create the object of base class
   virtual void fun2()=0;                       //we can pointer to the base class 
};
class pk:public akash
{
    public:
    void fun1()
    {
        cout<<"derived class function 1"<<endl;
    }
    void fun2()
    {
        cout<<"derived class function 2"<<endl;
    }
};
int main()
{
                                      // akash a;   not create the object of base class
   pk a;
    a.fun1();
    a.fun2();
}
